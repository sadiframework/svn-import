#summary terminology used in the SADI specification
#sidebar SADITrail_Contents

= Terminology =

<wiki:comment> the MUST, MUST NOT blah blah phrase didn't come through on the text version you sent out to us.  Have you added this since, or is it not being caught by the RFC converter?</wiki:comment>

The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119
 `[`[NormativeReferences#RFC2119 RFC2119]`]`. Readers of this document are expected to have a general familiarity with the HTTP protocol `[`[NormativeReferences#HTTP HTTP]`]`, RDF `[`[NormativeReferences#RDF RDF]`]`, and OWL `[`[NormativeReferences#OWL OWL]`]`.  In addition, this document uses the following SADI-specific terminology:

 * _input OWL class_ -- an OWL class that defines the required structure (i.e. schema) of a single input to a SADI service. Each SADI service has exactly one input OWL class.  
 * _input instance_ -- an RDF node that is an instance of the input OWL class for a given SADI service, and thus is a valid input for that service.  In general, an RDF node is an instance of an OWL class if it satifisies the property restrictions of the OWL class. Membership of an RDF node in a given OWL class can be determined using an OWL reasoner or can be directly asserted by assigning an rdf:type value that is equal to the OWL class URI.
 * _input RDF document_ -- a document containing one or more input instances for a SADI service. A SADI service is invoked by issuing an HTTP POST to the service URL with the input RDF document as the request body.
 * _output OWL class_ -- an OWL class that defines the required structure (i.e. schema) of a single output from a SADI service. Each SADI service has exactly one output OWL class.  
 * _output instance_ -- an RDF node that is an instance of the output OWL class for a given SADI service, and thus is a valid output for that service.  In general, an RDF node is an instance of an OWL class if it satifisies the property restrictions of the OWL class. Membership of an RDF node in a given OWL class can be determined using an OWL reasoner or can be directly asserted by assigning an rdf:type value that is equal to the OWL class URI.
 * _output RDF document_ -- the result of a SADI service invocation, which contains one or more output instances. For a given service invocation, the number of output instances in the output RDF document should be equal to the number of input instances in the input RDF document. Further, the URIs of corresponding input and output instances are always equal.
 * _service execution parameter_ -- a value which is separate from the input instances for a service invocation, but affects how the input instances are processed.  For example, a "Hello, World!" service that returns a natural language greeting might have a service execution parameter indicating the desired output language for the greeting.
 * _parameter OWL class_ -- an OWL class that defines the required structure (i.e. schema) of service execution parameters for a SADI service.  Similarly to input and output instances, service execution parameters may have arbitrarily complex representations in RDF. The parameter OWL class describes a graph that contains _all_ service execution parameters.  If a service has multiple execution parameters, their RDF representations must be connected in a single RDF graph that is an instance of the parameter OWL class.
 * _parameter instance_ -- an RDF node that is an instance of the parameter OWL class for a given SADI service, and thus is a valid set of execution parameters for that service. The input RDF document for a service invocation may contain at most one parameter instance, which affects the processing of all input instances within the input RDF document.
 * _default parameter instance_ -- an instance of the parameter OWL class that represents the default values for all service execution parameters.  These values are used when an input RDF document does not explicitly specify values for execution parameters.