#summary Describing service execution parameters using OWL
#sidebar SADITrail_Contents

= Describing Service Execution Parameters Using OWL =

Service execution parameters are configuration settings that affect the behaviour of a service and which are separate from the main input data that is processed by the service. 

== The Parameter OWL Class ==

Analogously to the input and output OWL classes, the _parameter OWL class_ for a service describes the RDF representation of the service execution parameters. A service may have arbitrarily many execution parameters, each of which may have arbitrarily complex representations in RDF, but all parameters MUST be connected in a single graph that is described by the parameter OWL class. Each service may have at most one parameter OWL class which is either referenced by or directly included in the metadata graph for the service.   

To demonstrate the description of service execution parameters, consider an extended "Hello, World!" service that returns greetings in alternate languages. Such a service has been implemented and is accessible at the URL http://sadiframework.org/examples/hello-param.  The parameter OWL class for the service (`hello:SecondaryParameters`) describes a single execution parameter for the desired language of the greeting, as shown below:

{{{
<owl:Class rdf:ID="SecondaryParameters">
  <owl:equivalentClass>
    <owl:Restriction>
      <owl:onProperty rdf:resource="#lang"/>
      <owl:minCardinality rdf:datatype="http://www.w3.org/2001/XMLSchema#int">1</owl:minCardinality>
    </owl:Restriction>
  </owl:equivalentClass>
</owl:Class>
}}}

Although the intention of the `hello:SecondaryParameters` class is to describe a graph with a single value for `hello:lang`, a minimum cardinality restriction has been used to facilitate instance checking with OWL reasoners that use the Open World Assumption (OWA).  For a detailed discussion of OWL class design as it pertains to instance checking and the OWA, see [InputAndOutputOWLClasses#Instance_Checking_and_the_Input_OWL_Class Instance Checking and the Input OWL Class].

When invoking a service, a client indicates the desired values of the execution parameters by including a single _parameter graph_ in the input RDF document for the service invocation, where the parameter graph is an instance of the parameter OWL class.  All input RDF graphs within the document are processed according to this single, shared set of parameter values.

== The Default Parameter Graph ==

The inclusion of a parameter graph in the input RDF document for a service invocation is not required. If no parameter graph is provided, the service MUST use a suitable set of default values for the execution parameters. To improve the transparency of service operation to clients, the service metadata graph MAY include or reference exactly one _default parameter graph_ which represents the default values for the service execution parameters. The output RDF produced by a service invocation that includes the default parameter graph MUST be isomorphic to the output RDF produced by a service invocation that omits the parameter graph entirely.

For illustrative purposes, the following N3 shows the default parameter graph for the parameterized "Hello, World!" service described in the previous section:

{{{
@prefix hello: <http://sadiframework.org/examples/hello.owl#> .

[] a hello:SecondaryParameters;
   hello:lang "en" .
}}}

This default parameter graph indicates that, unless otherwise specified, greetings will be returned in English.