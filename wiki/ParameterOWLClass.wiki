#summary Describing service execution parameters using OWL
#sidebar SADITrail_Contents

= Describing Service Execution Parameters Using OWL =

Service execution parameters are values which are separate from the input instances for a service invocation, but which affect how those input instances are processed. For example, the parameterized version of the SADI "Hello, World!" service (discussed below) accepts an execution parameter indicating the desired language for the generated greetings.

== The Parameter OWL Class ==

Analogously to the input and output OWL classes, the _parameter OWL class_ describes the RDF representation of the service execution parameters. A service may have any number of execution parameters, and each parameter may have an arbitrarily complex representation in RDF. However, all parameter representations MUST be contained within a single, connected RDF graph that is described by the parameter OWL class. Any service with execution parameters MUST have exactly one parameter OWL class that is either referenced by or directly included in the metadata graph for the service.   

To demonstrate the description of service execution parameters, consider an extended "Hello, World!" service that returns greetings in alternate languages. Such a service has been implemented and is accessible at http://sadiframework.org/examples/hello-param.  The parameter OWL class for the service (`hello:SecondaryParameters`) describes a single execution parameter for the desired language of the output greetings, as shown below:

{{{
<owl:Class rdf:ID="SecondaryParameters">
  <owl:equivalentClass>
    <owl:Restriction>
      <owl:onProperty rdf:resource="#lang"/>
      <owl:minCardinality rdf:datatype="http://www.w3.org/2001/XMLSchema#int">1</owl:minCardinality>
    </owl:Restriction>
  </owl:equivalentClass>
</owl:Class>
}}}

Although the intention of the `hello:SecondaryParameters` class is to describe a graph with a single value for `hello:lang`, a minimum cardinality restriction is used to facilitate instance checking with OWL reasoners that use the Open World Assumption (OWA).  For a detailed discussion of OWL class design as it pertains to instance checking and the OWA, see [InputAndOutputOWLClasses#Instance_Checking_and_the_Input_OWL_Class Instance Checking and the Input OWL Class].

When invoking a service, a client indicates the desired values of execution parameters by including a single _parameter instance_ in the input RDF document for the service invocation, where the parameter instance is an RDF node that is an instance of the parameter OWL class. All input instances within the input RDF document are processed according to this single, shared set of parameter values.

== The Default Parameter Instance ==

The inclusion of a parameter instance in the input RDF document for a service invocation is not required. If no parameter instance is provided by the client, the service MUST use a suitable set of default values for the execution parameters.  Further, the service metadata graph MUST either include or reference exactly one _default parameter instance_ that represents these default values for the parameters. The output instances generated by an input RDF document that includes a copy of the default parameter instance MUST be identical to the output instances generated by an input RDF document that does not contain a parameter instance. 

For illustrative purposes, the following N3 shows the default parameter instance for the parameterized "Hello, World!" service discussed above:

{{{
@prefix hello: <http://sadiframework.org/examples/hello.owl#> .

[] a hello:SecondaryParameters;
   hello:lang "en" .
}}}

This default parameter instance indicates that, unless otherwise specified, greetings will be returned in English.
