#summary Introduction for SADI RFC

= Introduction = 

The principal benefit of web services is that they enable widespread and convenient reuse of software components, independent of the larger applications or goals being realized by the client software.  However, in the current climate of WSDL/XML `[`[NormativeReferences#WSDL WSDL]`]``[`[NormativeReferences#XML XML]`]` and RESTful services `[`[NormativeReferences#REST REST]`]`, the successful implementation of web service clients still depends on detailed human knowledge of the particular services being used. For WSDL/XML services, software developers must be familiar with the particular XML schemas consumed and generated by a service and must implement transformations of local application data to and from those schemas as necessary. Automatic code generators for WSDL clients assist in this task, but developers must still understand the structure of the input/output data and the meaning of the various components. Likewise, developers of RESTful clients must be familiar with the semantics and permitted values of the named parameters for each service and must implement transformations on the service output data as necessary. The requirement on software developers to learn and accomodate the particular interfaces and data schemas of each service has a high cost in terms of human labour. Moreover, variability in the design of schemas and interfaces creates obstacles for the coordinated use of web services across different providers. 

SADI addresses the variability of data representation through the use of Semantic Web standards, namely RDF `[`[NormativeReferences#RDF RDF]`]` and OWL `[`[NormativeReferences#OWL OWL]`]`.  As these standards have been specifically designed to facilitate integration and processing of data across multiple sites, they possess significant advantages over XML and ad hoc data formats for encoding web service input/output. In particular, RDF enables automated merging of data sets and OWL enables automated logical reasoning over data.  Meaningful data integration always requires some level of agreement between providers regarding data representations. However, under SADI, providers must only agree at the more granular level of predicate vocabularies, rather than on complete representations of datatypes.

SADI addresses the variability of service interfaces by proposing conventions for retrieving metadata about services and for invoking services.  Briefly, metadata about a service is retrievable as an RDF document by issuing an HTTP GET to the service URL, while service invocation is realized by issuing an HTTP POST to the service URL with an input RDF document as the request body.  The response to a service invocation is likewise an RDF document.
