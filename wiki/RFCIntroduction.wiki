#summary Introduction for SADI RFC

= Introduction = 

The principal benefit of web services is that they enable widespread and convenient reuse of software components, independent of the larger applications or goals being realized by the client software.  However, in the current climate of WSDL/XML and RESTful services, the successful implementation of web service clients still depends on detailed human knowledge of the particular services being used. For WSDL/XML services, software developers must be familiar with the particular XML schemas consumed and generated by a service and must implement transformations of local application data to and from those schemas as necessary. Likewise, developers of RESTful clients must be familiar with the semantics and permitted values of the named parameters for each service and must implement transformations on the service output data as necessary. The requirement on software developers to learn and accomodate the particular interfaces and data schemas of each service has a high cost in terms of human labour. Moreover, variability in the design of schemas and interfaces creates obstacles for the coordinated use of web services across different providers. 

SADI addresses the variability of data representation through the use of Semantic Web standards, namely RDF and OWL.  As these standards have been specifically designed to facilitate integration and processing of data across multiple sites, they possess significant advantages over XML and ad hoc formats for encoding web service message content. In particular, RDF enables automated merging of data sets and OWL enables automated logical reasoning over data.  Data integration cannot be automated in a meaningful way without some level of agreement between providers regarding data representations. However, SADI services only require agreement at the more granular level of predicate vocabularies, rather than for complete representations of datatypes.

SADI addresses the variability of service interfaces by proposing conventions for invoking web services and for retrieving metadata about services.  Briefly, services are invoked by issuing an HTTP POST to the service URL, with an RDF document as the body of the request; likewise, the result of the service invocation is an RDF document. All information relevant to the service invocation must be contained within the input RDF document, and there are no named parameters associated with the request.  Service metadata is retrieved by issuing an HTTP GET request to the service URL and is also returned in the form of an RDF document.
